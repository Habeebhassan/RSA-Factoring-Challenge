#!/usr/bin/env python
import sys

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x, y, d = 2, 2, 1
    f = lambda x: (x**2 + 1) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)
    return d

def factorize(num):
    # Function to factorize a number into two smaller numbers
    if num == 1:
        return 1, 1
    if num % 2 == 0:
        return 2, num // 2
    factor = pollards_rho(num)
    return factor, num // factor

def main(filename):
    # Main function to read numbers from a file and print their factorization
    with open(filename, 'r') as file:
        lines = file.readlines()

    for line in lines:
        num = int(line)
        factors = factorize(num)
        print("{}={}*{}".format(num, factors[1], factors[0]))

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
        sys.exit(1)

    filename = sys.argv[1]
    main(filename)
